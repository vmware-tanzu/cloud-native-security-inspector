
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: settings.goharbor.goharbor.io
spec:
  group: goharbor.goharbor.io
  names:
    kind: Setting
    listKind: SettingList
    plural: settings
    singular: setting
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.dataSource.endpoint
      name: Endpoint
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Setting is the Schema for the cnsi related configs.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SettingSpec defines the spec of setting.
            properties:
              cache:
                description: Cache is the cache configurations.
                properties:
                  address:
                    description: 'Address of the cache. e.g: redis://xxx.com.'
                    type: string
                  credentialRef:
                    description: CredentialRef for providing access credential. Empty
                      credentialRef is acceptable if the cache service is public.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  database:
                    description: Database index for connecting to.
                    type: integer
                  kind:
                    description: Kind of the cache.
                    enum:
                    - Redis
                    type: string
                  settings:
                    description: Settings of cache.
                    properties:
                      livingTime:
                        default: 3600
                        description: LivingTime (seconds) specifies the living time
                          of the cache data. After cache data longer than the `LivingTime`,
                          the cache data must be refreshed again.
                        format: int64
                        type: integer
                      skipTLSVerify:
                        description: SkipTLSVerify indicates whether skip the TLS
                          verification. Only active when 'rediss' scheme is configured.
                        type: boolean
                    required:
                    - livingTime
                    type: object
                required:
                - address
                - kind
                type: object
              dataSource:
                description: DataSource is the data source definitions.
                properties:
                  credentialRef:
                    description: CredentialRef defines the authorization info for
                      registry, the value is a reference to secret.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  disabled:
                    description: Disable defines whether this data source disable
                      or enable, default is enable.
                    type: boolean
                  endpoint:
                    description: Endpoint defines the endpoint of the registry.
                    type: string
                  name:
                    description: Name is the registry name.
                    type: string
                  provider:
                    description: Provider defines the registry provider type.
                    enum:
                    - Harbor
                    type: string
                  scanSchedule:
                    description: ScanSchedule defines the scan schedule for the data
                      source.
                    type: string
                  skipTLSVerify:
                    description: TLSVerify defines whether need to verify tls cert.
                    type: boolean
                required:
                - endpoint
                - name
                - provider
                - scanSchedule
                type: object
              knownRegistries:
                description: KnownRegistries is the registered private registry collections.
                items:
                  description: KnownRegistry defines the spec of known registry.
                  properties:
                    credentialRef:
                      description: CredentialRef defines the authorization info for
                        registry, the value is a reference to secret.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    endpoint:
                      description: Endpoint defines the endpoint of the registry.
                      type: string
                    name:
                      description: Name is the registry name.
                      type: string
                    provider:
                      description: Provider defines the registry provider type.
                      enum:
                      - ali-acr
                      - artifact-hub
                      - aws-ecr
                      - azure-acr
                      - docker-hub
                      - docker-registry
                      - dtr
                      - github-ghcr
                      - gitlab
                      - google-gcr
                      - harbor
                      - helm-hub
                      - huawei-SWR
                      - jfrog-artifactory
                      - quay
                      - tencent-tcr
                      type: string
                    skipTLSVerify:
                      description: TLSVerify defines whether need to verify tls cert.
                      type: boolean
                  required:
                  - endpoint
                  - name
                  - provider
                  type: object
                type: array
            type: object
          status:
            description: SettingStatus defines the status of setting.
            properties:
              conditions:
                description: Conditions represents the collections of setting condition.
                items:
                  description: Condition is the schema for condition.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable message indicating
                        details about the transition.
                      type: string
                    reason:
                      description: Reason is the reason for condition's last transition.
                      type: string
                    status:
                      description: Status of condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              status:
                description: Status represents the health status of setting.
                enum:
                - Unknown
                - Healthy
                - Unhealthy
                type: string
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
